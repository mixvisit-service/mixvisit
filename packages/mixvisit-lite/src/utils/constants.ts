export const NOT_APPLICABLE = 'n/a';
export const SHADER_TYPES = ['FRAGMENT_SHADER', 'VERTEX_SHADER'] as const;
export const PRECISION_TYPES = ['LOW_FLOAT', 'MEDIUM_FLOAT', 'HIGH_FLOAT', 'LOW_INT', 'MEDIUM_INT', 'HIGH_INT'] as const;

export const WEBGL_FUNCTIONS = [
  'copyBufferSubData', 'getBufferSubData', 'blitFramebuffer', 'framebufferTextureLayer',
  'getInternalformatParameter', 'invalidateFramebuffer', 'invalidateSubFramebuffer', 'readBuffer',
  'renderbufferStorageMultisample', 'texStorage2D', 'texStorage3D', 'texImage3D', 'texSubImage3D',
  'copyTexSubImage3D', 'compressedTexImage3D', 'compressedTexSubImage3D', 'getFragDataLocation',
  'uniform1ui', 'uniform2ui', 'uniform3ui', 'uniform4ui', 'uniform1uiv', 'uniform2uiv', 'uniform3uiv',
  'uniform4uiv', 'uniformMatrix2x3fv', 'uniformMatrix3x2fv', 'uniformMatrix2x4fv', 'uniformMatrix4x2fv',
  'uniformMatrix3x4fv', 'uniformMatrix4x3fv', 'vertexAttribI4i', 'vertexAttribI4iv', 'vertexAttribI4ui',
  'vertexAttribI4uiv', 'vertexAttribIPointer', 'vertexAttribDivisor', 'drawArraysInstanced',
  'drawElementsInstanced', 'drawRangeElements', 'drawBuffers', 'clearBufferiv', 'clearBufferuiv',
  'clearBufferfv', 'clearBufferfi', 'createQuery', 'deleteQuery', 'isQuery', 'beginQuery', 'endQuery',
  'getQuery', 'getQueryParameter', 'createSampler', 'deleteSampler', 'isSampler', 'bindSampler',
  'samplerParameteri', 'samplerParameterf', 'getSamplerParameter', 'fenceSync', 'isSync', 'deleteSync',
  'clientWaitSync', 'waitSync', 'getSyncParameter', 'createTransformFeedback', 'deleteTransformFeedback',
  'isTransformFeedback', 'bindTransformFeedback', 'beginTransformFeedback', 'endTransformFeedback',
  'transformFeedbackVaryings', 'getTransformFeedbackVarying', 'pauseTransformFeedback',
  'resumeTransformFeedback', 'bindBufferBase', 'bindBufferRange', 'getIndexedParameter',
  'getUniformIndices', 'getActiveUniforms', 'getUniformBlockIndex', 'getActiveUniformBlockParameter',
  'getActiveUniformBlockName', 'uniformBlockBinding', 'createVertexArray', 'deleteVertexArray',
  'isVertexArray', 'bindVertexArray',
] as const;

export const WEBGL_PARAMS = {
  vertexShader: [
    'MAX_VERTEX_ATTRIBS',
    'MAX_VERTEX_UNIFORM_VECTORS',
    'MAX_VERTEX_TEXTURE_IMAGE_UNITS',
    'MAX_VARYING_VECTORS',
    'VERTEX_BEST_FLOAT_PRECISION',
    'MAX_VERTEX_UNIFORM_COMPONENTS',
    'MAX_VERTEX_UNIFORM_BLOCKS',
    'MAX_VERTEX_OUTPUT_COMPONENTS',
    'MAX_VARYING_COMPONENTS',
  ],
  transformFeedback: [
    'MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',
    'MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',
    'MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',
  ],
  rasterizer: [
    'ALIASED_POINT_SIZE_RANGE',
    'ALIASED_LINE_WIDTH_RANGE',
  ],
  fragmentShader: [
    'MAX_FRAGMENT_UNIFORM_VECTORS',
    'MAX_TEXTURE_IMAGE_UNITS',
    'FLOAT_INT_PRECISION',
    'FRAGMENT_BEST_FLOAT_PRECISION',
    'MAX_FRAGMENT_UNIFORM_COMPONENTS',
    'MAX_FRAGMENT_UNIFORM_BLOCKS',
    'MAX_FRAGMENT_INPUT_COMPONENTS',
    'MIN_PROGRAM_TEXEL_OFFSET',
    'MAX_PROGRAM_TEXEL_OFFSET',
  ],
  framebuffer: [
    'MAX_DRAW_BUFFERS',
    'MAX_COLOR_ATTACHMENTS',
    'MAX_SAMPLES',
    'RGBA_BITS',
    'DEPTH_STENCIL_BITS',
    'MAX_RENDERBUFFER_SIZE',
    'MAX_VIEWPORT_DIMS',
  ],
  textures: [
    'MAX_TEXTURE_SIZE',
    'MAX_CUBE_MAP_TEXTURE_SIZE',
    'MAX_COMBINED_TEXTURE_IMAGE_UNITS',
    'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
    'MAX_3D_TEXTURE_SIZE',
    'MAX_ARRAY_TEXTURE_LAYERS',
    'MAX_TEXTURE_LOD_BIAS',
  ],
  uniformBuffers: [
    'MAX_UNIFORM_BUFFER_BINDINGS',
    'MAX_UNIFORM_BLOCK_SIZE',
    'UNIFORM_BUFFER_OFFSET_ALIGNMENT',
    'MAX_COMBINED_UNIFORM_BLOCKS',
    'MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',
    'MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',
  ],
} as const;

export const TEXTURE_FORMATS = [
  'r8unorm',
  'r8snorm',
  'r8uint',
  'r8sint',
  'r16uint',
  'r16sint',
  'r16float',
  'rg8unorm',
  'rg8snorm',
  'rg8uint',
  'rg8sint',
  'r32uint',
  'r32sint',
  'r32float',
  'rg16uint',
  'rg16sint',
  'rg16float',
  'rgba8unorm',
  'rgba8unorm-srgb',
  'rgba8snorm',
  'rgba8uint',
  'rgba8sint',
  'bgra8unorm',
  'bgra8unorm-srgb',
  'rgb9e5ufloat',
  'rgb10a2unorm',
  'rg11b10ufloat',
  'rg32uint',
  'rg32sint',
  'rg32float',
  'rgba16uint',
  'rgba16sint',
  'rgba16float',
  'rgba32uint',
  'rgba32sint',
  'rgba32float',
  'stencil8',
  'depth16unorm',
  'depth24plus',
  'depth24plus-stencil8',
  'depth32float',
  'depth32float-stencil8',
  'bc1-rgba-unorm',
  'bc1-rgba-unorm-srgb',
  'bc2-rgba-unorm',
  'bc2-rgba-unorm-srgb',
  'bc3-rgba-unorm',
  'bc3-rgba-unorm-srgb',
  'bc4-r-unorm',
  'bc4-r-snorm',
  'bc5-rg-unorm',
  'bc5-rg-snorm',
  'bc6h-rgb-ufloat',
  'bc6h-rgb-float',
  'bc7-rgba-unorm',
  'bc7-rgba-unorm-srgb',
  'etc2-rgb8unorm',
  'etc2-rgb8unorm-srgb',
  'etc2-rgb8a1unorm',
  'etc2-rgb8a1unorm-srgb',
  'etc2-rgba8unorm',
  'etc2-rgba8unorm-srgb',
  'eac-r11unorm',
  'eac-r11snorm',
  'eac-rg11unorm',
  'eac-rg11snorm',
  'astc-4x4-unorm',
  'astc-4x4-unorm-srgb',
  'astc-5x4-unorm',
  'astc-5x4-unorm-srgb',
  'astc-5x5-unorm',
  'astc-5x5-unorm-srgb',
  'astc-6x5-unorm',
  'astc-6x5-unorm-srgb',
  'astc-6x6-unorm',
  'astc-6x6-unorm-srgb',
  'astc-8x5-unorm',
  'astc-8x5-unorm-srgb',
  'astc-8x6-unorm',
  'astc-8x6-unorm-srgb',
  'astc-8x8-unorm',
  'astc-8x8-unorm-srgb',
  'astc-10x5-unorm',
  'astc-10x5-unorm-srgb',
  'astc-10x6-unorm',
  'astc-10x6-unorm-srgb',
  'astc-10x8-unorm',
  'astc-10x8-unorm-srgb',
  'astc-10x10-unorm',
  'astc-10x10-unorm-srgb',
  'astc-12x10-unorm',
  'astc-12x10-unorm-srgb',
  'astc-12x12-unorm',
  'astc-12x12-unorm-srgb',
] as const;
